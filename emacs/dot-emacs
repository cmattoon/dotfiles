(require 'package)
(add-to-list
 'package-archives
 '("melpa" . "https://melpa.org/packages/")
t)

(when (file-directory-p "/Users/cmattoon/github/hack/php-mode/lisp")
  (load "/Users/cmattoon/github/hack/php-mode/lisp/php-mode-autoloads.el"))

;; Any add to list for package-archives (to add marmalade or melpa) goes here
;; ANSIBLE MANAGED BLOCK ;;
(add-to-list 'load-path "~/.emacs.d/lisp")
;; ANSIBLE MANAGED BLOCK ;;
(add-to-list 'load-path "~/.emacs.d/lisp")
;; ANSIBLE MANAGED BLOCK ;;
(require 'yaml-mode)
(require 'reach-mode)
(require 'vue-html-mode)
(add-to-list 'auto-mode-alist '("\\.rsh\\'" . javascript-mode))
(add-to-list 'auto-mode-alist '("\\.mjs\\'" . javascript-mode))
(add-to-list 'auto-mode-alist '("\\.graphqls\\'"  . graphql-mode)) 
(add-to-list 'auto-mode-alist '("\\.yml\\'" . yaml-mode))
(add-to-list 'auto-mode-alist '("\\.vue\\'" . vue-html-mode))
(add-to-list 'auto-mode-alist '("\\.php\\'" . web-mode))
;; package-install hcl-mode
(add-to-list 'auto-mode-alist '("\\.tf\\'" . hcl-mode))
(add-to-list 'auto-mode-alist '("\\.sp\\'" . hcl-mode))
(add-to-list 'auto-mode-alist '("\\.spql\\'" . hcl-mode))
;; ANSIBLE MANAGED BLOCK ;;
(require 'go-mode)
(require 'go-guru)
(add-to-list 'auto-mode-alist '("\\.go\\'" . go-mode))
(defun custom-go-mode-hook ()
  (add-hook 'before-save-hook 'gofmt-before-save)

  )

(add-hook 'go-mode-hook 'custom-go-mode-hook)
(add-hook 'go-mode-hook #'go-guru-hl-identifier-mode)
;; (add-to-list 'auto-mode-alist '("\\.tsx\\'" . typescript-mode))
(add-to-list 'auto-mode-alist '("\\.tsx\\'" . javascript-mode))
;; dockerfile mode
(require 'dockerfile-mode)
(add-to-list 'auto-mode-alist '("Dockerfile\\'" . dockerfile-mode))
(require 'quarto-mode)
(add-to-list 'auto-mode-alist '("\\.Rmd\\'" . poly-quarto-mode))

(add-to-list 'load-path "~/.emacs.d/el-get/el-get")
(unless (require 'el-get nil 'noerror)
  (with-current-buffer
      (url-retrieve-synchronously
       "https://raw.githubusercontent.com/dimitri/el-get/master/el-get-install.el")
    (goto-char (point-max))
    (eval-print-last-sexp)))

(add-to-list 'el-get-recipe-path "~/.emacs.d/el-get-user/recipes")
(el-get 'sync)

(setq auto-save-file-name-transforms
      `((".*" ,temporary-file-directory t)))

(setq create-lockfiles nil)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   '(protobuf-mode vue-mode quarto-mode base16-theme jekyll-modes web-mode hcl-mode graphql-mode graphql typescript-mode solidity-mode ## phps-mode js2-mode)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
